# errors

Minimal lib to wrap error with stacktrace. Works with std errors, slog packages.
Drop-in replacement for standard errors package.

example

    func foo() (error) {
        return errors.Wrap1(os.Open("non-existing-file"))
    }

    func main() {
        slog.SetDefault(slog.New(slog.NewJSONHandler(os.Stdout, nil)))

        err := foo()
        slog.Error("something is wrong", errors.Attr(err))
    }

output 

    {
      "time": "2024-09-18T02:06:16.67056337+09:00",
      "level": "ERROR",
      "msg": "something is wrong",
      "errors": {
        "error": "open non-existing-file: no such file or directory",
        "stack": [
          "main.foo:/home/rok/src/github.com/xtdlib/errors/example/simple/main.go:13",
          "main.main:/home/rok/src/github.com/xtdlib/errors/example/simple/main.go:19"
        ]
      }
    }
